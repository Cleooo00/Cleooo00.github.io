<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CleFke&#39;Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://haoyuliugh.github.io/"/>
  <updated>2021-04-01T23:12:28.291Z</updated>
  <id>http://haoyuliugh.github.io/</id>
  
  <author>
    <name>CleFke</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安装sbt以及maven打包程序遇到的一些问题</title>
    <link href="http://haoyuliugh.github.io/2021/04/02/%E5%AE%89%E8%A3%85sbt%E4%BB%A5%E5%8F%8Amaven%E6%89%93%E5%8C%85%E7%A8%8B%E5%BA%8F%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>http://haoyuliugh.github.io/2021/04/02/安装sbt以及maven打包程序遇到的一些问题/</id>
    <published>2021-04-02T06:58:15.000Z</published>
    <updated>2021-04-01T23:12:28.291Z</updated>
    
    <content type="html"><![CDATA[<h4 id="sbt换国内源报错记录"><a href="#sbt换国内源报错记录" class="headerlink" title="sbt换国内源报错记录"></a>sbt换国内源报错记录</h4><a id="more"></a><p>在首次尝试运行时，有如下报错：</p><p><img src="//haoyuliugh.github.io/2021/04/02/安装sbt以及maven打包程序遇到的一些问题/1.png" alt="01"></p><p>查阅<a href="https://stackoverflow.com/questions/24181348/sbt-install-you-probably-access-the-destination-server-through-a-proxy-server-t" target="_blank" rel="noopener">资料</a>发现需要手动配置代理，按照教程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/sbt/conf</span><br><span class="line">vim sbtconfig.txt</span><br></pre></td></tr></table></figure><p>添加如下代理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-Dhttp.proxyHost=proxy</span><br><span class="line">-Dhttp.proxyPort=8080</span><br></pre></td></tr></table></figure><p>添加后仍然报错，发现</p><blockquote><p>/conf 目录下的两个文件 sbtconfig.txt 仅适用Windows，sbtopts适用Mac/Linux </p></blockquote><p>于是更改后者文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim  ./conf/sbtopts</span><br></pre></td></tr></table></figure><p>重新添加上述代理，并在末尾新增</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Dsbt.override.build.reops=true</span><br></pre></td></tr></table></figure><p>运行成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[info] Set current project to sbt (in build file:/usr/local/sbt/)</span><br><span class="line">[info] 1.3.8</span><br></pre></td></tr></table></figure><hr><h4 id="mvn打包失败"><a href="#mvn打包失败" class="headerlink" title="mvn打包失败"></a>mvn打包失败</h4><p>使用mvn命令打包，报错如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo: /usr/local/maven/bin/mvn：找不到命令</span><br></pre></td></tr></table></figure><p>没有找到解决方案，于是将maven删除，使用apt-get下载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install maven</span><br></pre></td></tr></table></figure><p>下载后查看maven版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn  -v</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Apache Maven 3.6.0</span><br><span class="line">Maven home: /usr/share/maven</span><br><span class="line">Java version: 1.8.0_162, vendor: Oracle Corporation, runtime: /usr/lib/jvm/jdk1.8.0_162/jre</span><br><span class="line">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class="line">OS name: &quot;linux&quot;, version: &quot;5.4.0-71-generic&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br></pre></td></tr></table></figure><p>若替换为国内源，在下述位置更改settings.xml文件,在&lt;mirrors&gt;里面添加如下镜像</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云谷歌仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/google<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云阿帕奇仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/apache-snapshots<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云spring仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/spring<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云spring插件仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/spring-plugin<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/share/maven/conf</span><br><span class="line">sudo vim settings.xml #这里要用sudo，该文件是只读文件，不然无法编辑</span><br></pre></td></tr></table></figure><p>添加镜像的时候有个坑，它的xml文件里面是有mirrors目录的，参照了这篇<a href="http://www.360doc.com/content/20/0219/13/63557093_893137651.shtml" target="_blank" rel="noopener">博客</a>,最后解决</p><p>ps 使用apt-get install 指令是时，下载的文件有如下路径：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/usr/share  #文件的位置，其中conf配置文件也有可能在/share的此软件目录下，例如上述               maven配置文件在/usr/share/maven/conf下</span><br><span class="line">/usr/bin    #可执行文件位置</span><br><span class="line">/etc        #配置文件位置</span><br><span class="line">/usr/lib    #lib文件位置</span><br></pre></td></tr></table></figure><p>重新进行打包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd  ~/sparkapp2</span><br><span class="line">mvn package</span><br></pre></td></tr></table></figure><p>成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[INFO] Building jar: /home/hadoop/sparkapp2/target/simple-project-1.0.jar</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time:  01:10 min</span><br><span class="line">[INFO] Finished at: 2021-04-02T14:01:49+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;sbt换国内源报错记录&quot;&gt;&lt;a href=&quot;#sbt换国内源报错记录&quot; class=&quot;headerlink&quot; title=&quot;sbt换国内源报错记录&quot;&gt;&lt;/a&gt;sbt换国内源报错记录&lt;/h4&gt;
    
    </summary>
    
      <category term="大数据学习" scheme="http://haoyuliugh.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="spark maven" scheme="http://haoyuliugh.github.io/tags/spark-maven/"/>
    
  </entry>
  
  <entry>
    <title>安装双系统以及ssr总结</title>
    <link href="http://haoyuliugh.github.io/2021/03/31/%E5%AE%89%E8%A3%85%E5%8F%8C%E7%B3%BB%E7%BB%9F%E4%BB%A5%E5%8F%8Assr%E6%80%BB%E7%BB%93/"/>
    <id>http://haoyuliugh.github.io/2021/03/31/安装双系统以及ssr总结/</id>
    <published>2021-03-31T01:44:31.000Z</published>
    <updated>2021-03-31T12:38:01.855Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>在自己电脑上安装了Ubuntu双系统，并安装了一些基础软件，中间遇到了很多问题，遂作记录</p><a id="more"></a><h4 id="电脑版本"><a href="#电脑版本" class="headerlink" title="电脑版本"></a>电脑版本</h4><p>电脑是联想拯救者 256G固态硬盘 + 1T机械硬盘 </p><p>即 UEFI 新式bios 双硬盘</p><p>查看自己是否是UEFI还是传统MBR</p><p>win + r 输入 msinfo32 </p><p>如下：</p><p><img src="//haoyuliugh.github.io/2021/03/31/安装双系统以及ssr总结/2.png" alt="02"></p><p>这个版本很重要，之前看错了教程走了弯路，双硬盘的安装双系统有一些区别。</p><p>参考的是<a href="https://www.cnblogs.com/masbay/p/10745170.html" target="_blank" rel="noopener">这篇教程</a>，写的很详细，感谢大哥</p><h4 id="装系统记录"><a href="#装系统记录" class="headerlink" title="装系统记录"></a>装系统记录</h4><p>首先是下载Ubuntu系统镜像文件，直接到<a href="https://cn.ubuntu.com/download" target="_blank" rel="noopener">官网</a>下载，我下载的版本是<a href="https://ubuntu.com/download/alternative-downloads" target="_blank" rel="noopener">Ubuntu 18.04 LTS</a></p><p><img src="//haoyuliugh.github.io/2021/03/31/安装双系统以及ssr总结/1.png" alt="01"></p><p>然后是制作启动盘，这里，如果是新版UEFI的可以直接把下载好的 iso文件解压到你的u盘。但为了不出错，仍然安装传统的方法制作启动盘。</p><hr><p>首先下载启动盘制作工具</p><p>这里我使用的是 <a href="https://cn.ultraiso.net/xiazai.html" target="_blank" rel="noopener">UltraISO</a> </p><p><img src="//haoyuliugh.github.io/2021/03/31/安装双系统以及ssr总结/3.png" alt="03"></p><p>直接下载安装一套组合拳，然后点击试用即可，详细看文章开头大哥的教程</p><p>然后插入你的u盘，这里制作启动盘参考百度的教程，不赘述。</p><h5 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a>注意点：</h5><ol><li>这里的u盘需要8G以上，不然装不下，而且U盘内容在安装的过程中会被清空，需要提前备份</li><li>也可以使用移动硬盘，但在格式化的时候要注意格式化的格式 </li></ol><p>到这里，已经制作好了你的启动盘，可以在此电脑里面看到它，注意，不要去动它。</p><hr><h5 id="然后是进行系统分区"><a href="#然后是进行系统分区" class="headerlink" title="然后是进行系统分区"></a>然后是进行系统分区</h5><p>右键此电脑-&gt;点击管理-&gt;点击磁盘管理-&gt;进行分区</p><p><img src="//haoyuliugh.github.io/2021/03/31/安装双系统以及ssr总结/4.png" alt="04"></p><p>如图所示，红色框中，我已经安装好了系统。但新开辟出来的空间应该是黑色或绿色的而不是蓝色。</p><h5 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h5><ol><li>因为是双硬盘，所以最好在你的固态硬盘单独开辟一块空间用来放Ubuntu的系统文件（200M），这样，在每次开机的时候自动检测，可以自主选择进入Ubuntu还是Windows系统</li></ol><hr><h5 id="接下来进行bios设置"><a href="#接下来进行bios设置" class="headerlink" title="接下来进行bios设置"></a>接下来进行bios设置</h5><p>重启电脑，在显示开机页面时进入bios，将Secure Boot 关闭。</p><h5 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h5><p>因为刚刚在固态硬盘开辟了空间，但实际上，安装Ubuntu时是看不见此固态盘的，还需要进行如下设置：</p><p>将BIOS中的SATA设置改为AHCI，然后保存更改并退出</p><hr><h5 id="此时，准备工作做完"><a href="#此时，准备工作做完" class="headerlink" title="此时，准备工作做完"></a>此时，准备工作做完</h5><p>重启按F12（联想拯救者）进入启动页，选择u盘，一路按照文章开头教程即可。</p><h4 id="SSR配置"><a href="#SSR配置" class="headerlink" title="SSR配置"></a>SSR配置</h4><p>在Windows下有完整的客户端，在Ubuntu中，有两种方式，一是直接下载SSR脚本，处理配置文件，开始时我使用这种，但中间出了很多毛病。</p><p>最后，找到了一个名为electron-ssr的图形化界面的软件</p><p><a href="https://github.com/shadowsocksrr/electron-ssr/releases/tag/v0.2.7" target="_blank" rel="noopener">https://github.com/shadowsocksrr/electron-ssr/releases/tag/v0.2.7</a></p><p>由于一些熟知的原因，很多时候上不去github，可将github.com替换为hub.fastgit.org</p><p>参考这位大哥的方法，下载安装</p><p><img src="//haoyuliugh.github.io/2021/03/31/安装双系统以及ssr总结/7.png" alt="07"></p><p>Ubuntu下deb为安装文件，就像windows下的安装文件一样，下载下来进行安装，比较简单。</p><p>接下来进入安装包的下载目录进行安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i electron-ssr-0.2.7.deb</span><br></pre></td></tr></table></figure><p>安装完后，直接启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">electron-ssr</span><br></pre></td></tr></table></figure><h5 id="这里遇到了一个问题"><a href="#这里遇到了一个问题" class="headerlink" title="这里遇到了一个问题"></a>这里遇到了一个问题</h5><p>electron-ssr是ssr的图形界面，所以在第一次启动时会自动下载 ssr python包，但由于网络问题，发现上不去，无法自动下载。</p><p>报错与这位<a href="https://github.com/qingshuisiyuan/electron-ssr-backup/issues/33" target="_blank" rel="noopener">兄弟</a>类似：</p><p><img src="//haoyuliugh.github.io/2021/03/31/安装双系统以及ssr总结/8.png" alt="08"></p><p>一开始以为是之前下载的ssr服务开着，然后把他卸载了发现还是不行。重装软件，最后依然没找到解决方法。</p><p>索性手动下载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git #没有git的话先把git下载了</span><br><span class="line">git clone https://github.com/shadowsocksr/shadowsocksr.git</span><br><span class="line"><span class="meta">#</span>如果下载太慢或这上不去就参照上面的将github.com替换为hub.fastgit.org</span><br></pre></td></tr></table></figure><p>然后进入下载目录下的/shadowsocksr/bin</p><p><img src="//haoyuliugh.github.io/2021/03/31/安装双系统以及ssr总结/9.png" alt="09"></p><p>在里面应该能看到一个local.py文件，如果没有看到就在重新找找，找到后，将此路径添加到electron-ssr的python包处，即可。</p><p>然后配置你的代理信息，并且在Ubuntu的系统设置设置代理，这位<a href="https://github.com/qingshuisiyuan/electron-ssr-backup/blob/master/Ubuntu.md" target="_blank" rel="noopener">大哥</a>写了详细的操作步骤。</p><h4 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h4><p><img src="//haoyuliugh.github.io/2021/03/31/安装双系统以及ssr总结/10.jpg" alt="10"></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;p&gt;在自己电脑上安装了Ubuntu双系统，并安装了一些基础软件，中间遇到了很多问题，遂作记录&lt;/p&gt;
    
    </summary>
    
      <category term="杂项" scheme="http://haoyuliugh.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="Ubuntu ssr" scheme="http://haoyuliugh.github.io/tags/Ubuntu-ssr/"/>
    
  </entry>
  
  <entry>
    <title>FIRST集和FOLLOW集的理解和补充</title>
    <link href="http://haoyuliugh.github.io/2020/11/26/FIRST%E9%9B%86%E5%92%8CFOLLOW%E9%9B%86%E7%9A%84%E7%90%86%E8%A7%A3%E5%92%8C%E8%A1%A5%E5%85%85/"/>
    <id>http://haoyuliugh.github.io/2020/11/26/FIRST集和FOLLOW集的理解和补充/</id>
    <published>2020-11-26T09:10:11.000Z</published>
    <updated>2020-11-26T12:38:15.126Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>编译原理，关于FIRST集和FOLLOW集部分的笔记，本文参考了<a href="https://www.cnblogs.com/10134dz/p/13631696.html" target="_blank" rel="noopener">另一篇博客</a>，在此基础上加入了一些个人的理解。</p><a id="more"></a><h4 id="FIRST集"><a href="#FIRST集" class="headerlink" title="FIRST集"></a>FIRST集</h4><h5 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h5><p>设文法 $G= (V_T,V_N,S,P)$是上下文无关文法，则有 $$FIRST(\alpha) ={a|\alpha\Rightarrow^*a…,a\in V_T} $$ </p><h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><blockquote><ol><li><p>后面是终结符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;   A-&gt;aB|ε</span><br><span class="line">&gt;   A-&gt;c</span><br><span class="line">&gt;   </span><br><span class="line">&gt;   FIRST(A) = &#123;a,c,ε&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><p>  因为A能<strong>直接</strong>得到的第一个终结符包括a，c，ε，所以把他们加入。</p><ol start="2"><li><p>后面是非终结符（一）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;   A-&gt;Ba</span><br><span class="line">&gt;   B-&gt;b</span><br><span class="line">&gt;   </span><br><span class="line">&gt;   FIRST(A) = &#123;b&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><p>  A能直接得到的是一个非终结符，而这个非终结符<strong>只能</strong>得到一个终结符b，所以把b加入。</p><ol start="3"><li><p>后面是非终结符（二）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;   A-&gt;Bc</span><br><span class="line">&gt;   B-&gt;b|ε</span><br><span class="line">&gt;   </span><br><span class="line">&gt;   First(A)=&#123;b,c&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><p>  注意，这里没有把ε也加入到First集中，是因为A通过B得到ε时，还能继续向后，也就是说将ε代换到第一个式子里面，后面还有一个非终结符c，所以<strong>不能把ε加入</strong>。</p><p>  我们可以说$First(B)={b,ε}$，这是显然的。</p><ol start="4"><li><p>后面是非终结符（三）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;   A-&gt;BC</span><br><span class="line">&gt;   B-&gt;b|ε</span><br><span class="line">&gt;   C-&gt;c|ε</span><br><span class="line">&gt;   </span><br><span class="line">&gt;   First(A)=&#123;b,c,ε&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><p>  对比第3条，为什么这里又把ε加入了，是因为将ε代换B后，继续向后，发现C也能被ε代换，于是应用了课本第三条规则，即$A-&gt;ε$,此时可以将ε加入到First集。</p></blockquote><h4 id="FOLLOW集"><a href="#FOLLOW集" class="headerlink" title="FOLLOW集"></a>FOLLOW集</h4><h5 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h5><p>设S是文法G的开始符号，对于G中的任何一个非终结符A，则有 $$FOLLOW(A) ={a|S\Rightarrow^*…Aa…,a\in V_T} $$ </p><h5 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h5><p>$FOLLOW(A)$就是紧跟在A后面的终结符集和或者结束符$’$‘$</p><h5 id="求解规则"><a href="#求解规则" class="headerlink" title="求解规则"></a>求解规则</h5><ol><li>对于文法的开始符号S,则把$$$放进Follow（S）中；</li><li>若$A-&gt;αBβ$是一个产生式，则把$First(β)$中<strong>除了ε以外的符号</strong>加入到Follow（B）中；</li><li>若$A-&gt;αB$是一个产生式，或$A-&gt;αBβ$是一个产生式且$First(\beta)$中包含ε，则把$Follow(A)$加入到$Follow(B)$中</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;p&gt;编译原理，关于FIRST集和FOLLOW集部分的笔记，本文参考了&lt;a href=&quot;https://www.cnblogs.com/10134dz/p/13631696.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;另一篇博客&lt;/a&gt;，在此基础上加入了一些个人的理解。&lt;/p&gt;
    
    </summary>
    
      <category term="编译原理" scheme="http://haoyuliugh.github.io/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="易错点" scheme="http://haoyuliugh.github.io/tags/%E6%98%93%E9%94%99%E7%82%B9/"/>
    
      <category term="FIRST集" scheme="http://haoyuliugh.github.io/tags/FIRST%E9%9B%86/"/>
    
      <category term="FOLLOW集" scheme="http://haoyuliugh.github.io/tags/FOLLOW%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>常用的轮子（一）</title>
    <link href="http://haoyuliugh.github.io/2020/07/22/%E5%B8%B8%E7%94%A8%E7%9A%84%E8%BD%AE%E5%AD%90%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://haoyuliugh.github.io/2020/07/22/常用的轮子（一）/</id>
    <published>2020-07-22T08:05:32.000Z</published>
    <updated>2020-07-22T08:33:47.500Z</updated>
    
    <content type="html"><![CDATA[<h4 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h4><a id="more"></a><ol><li><p>初始化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Queue&lt;Integer&gt; q = <span class="keyword">new</span> LinkedList();</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>获取队首元素（如果队列为空则返回null）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q.peek()</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>入队</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q.offer(data)   <span class="comment">//data 即入队元素</span></span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>出队</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q.poll()        <span class="comment">//队列 先进先出 出队为对首元素</span></span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>获取队列大小</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q.size()</span><br></pre></td></tr></table></figure></li></ol><h4 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h4><ol><li><p>初始化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stack&lt;Integer&gt; s = <span class="keyword">new</span> Stack&lt;&gt;()</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>入栈</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.push(data)   <span class="comment">//data即是入栈元素</span></span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>出栈</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.pop()        <span class="comment">//先进后出 栈顶出栈</span></span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>判断栈是否为空</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.empty()      <span class="comment">//return boolean,'true' means empty</span></span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>获取栈顶元素</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.peek()      <span class="comment">//get the top element</span></span><br></pre></td></tr></table></figure></li></ol><ol start="6"><li><p>获取栈大小（元素个数）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.size()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;队列&quot;&gt;&lt;a href=&quot;#队列&quot; class=&quot;headerlink&quot; title=&quot;队列&quot;&gt;&lt;/a&gt;队列&lt;/h4&gt;
    
    </summary>
    
      <category term="算法" scheme="http://haoyuliugh.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="基础知识" scheme="http://haoyuliugh.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Servlet url-pattern路径匹配问题</title>
    <link href="http://haoyuliugh.github.io/2020/05/16/Servlet-url-pattern%E8%B7%AF%E5%BE%84%E5%8C%B9%E9%85%8D%E9%97%AE%E9%A2%98/"/>
    <id>http://haoyuliugh.github.io/2020/05/16/Servlet-url-pattern路径匹配问题/</id>
    <published>2020-05-16T15:21:59.000Z</published>
    <updated>2020-05-17T02:18:33.472Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><blockquote><p>在Servlet映射过程中，遇到了一个路径匹配的问题，遂做记录。</p></blockquote><a id="more"></a><p>如图所示</p><p><img src="//haoyuliugh.github.io/2020/05/16/Servlet-url-pattern路径匹配问题/1.JPG" alt="1"></p><h4 id="原思路"><a href="#原思路" class="headerlink" title="原思路"></a>原思路</h4><p>在login.html页面中有一个form表单，现在想利用action属性提交信息。</p><p>于是在xml文件中配置了如下信息：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginCheck<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.login.Users<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginCheck<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/loginCheck<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在表单属性中：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"loginCheck"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>此时，是找不到loginCheck目标的。经过查阅网上资料，发现url-pattern属性的初识位置是/web页面，若直接写/loginCheck表示从web根目录下面找文件。</p><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>因为目标在login.html里，html文件夹下，所以需要修改url-pattern的值为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/html/loginCheck<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样才表示去html文件夹下寻找目标，才能正确匹配上。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在Servlet映射过程中，遇到了一个路径匹配的问题，遂做记录。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="JAVA学习" scheme="http://haoyuliugh.github.io/categories/JAVA%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Servlet" scheme="http://haoyuliugh.github.io/tags/Servlet/"/>
    
  </entry>
  
  <entry>
    <title>JSP实现简单登录</title>
    <link href="http://haoyuliugh.github.io/2020/05/09/JSP%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%99%BB%E5%BD%95/"/>
    <id>http://haoyuliugh.github.io/2020/05/09/JSP实现简单登录/</id>
    <published>2020-05-09T15:39:14.000Z</published>
    <updated>2020-05-09T16:13:10.953Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><blockquote><p>在接触了JSP后，跟着老师简单做了一个小demo，模拟的登录操作</p></blockquote><a id="more"></a><h4 id="过程描述"><a href="#过程描述" class="headerlink" title="过程描述"></a>过程描述</h4><blockquote><ol><li>首先是一个登录页面，通过表单接收数据；</li><li>将得到的数据封装进request对象，封装的内容为表单填写内容；</li><li>通过表单的method属性，用post方法发送到action指定的jsp文件，即检查用户信息的文件；</li><li>在检查文件连接数据库，并取出request传来的数据，传入sql语句进行数据库的匹配；</li><li>进入判断逻辑。判断成功，则通过jsp的forward page方法跳转到登陆成功页面，并携带参数；或是判断失败，跳转至失败页面。</li></ol></blockquote><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><blockquote><ol><li><p>login.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&gt;   &lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&gt;   &lt;html&gt;</span><br><span class="line">&gt;   &lt;head&gt;</span><br><span class="line">&gt;       &lt;title&gt;Login&lt;/title&gt;</span><br><span class="line">&gt;   &lt;/head&gt;</span><br><span class="line">&gt;   &lt;body&gt;</span><br><span class="line">&gt;   &lt;div style=<span class="string">"text-align: center"</span>&gt;</span><br><span class="line">&gt;       &lt;h1&gt;Login&lt;/h1&gt;</span><br><span class="line">&gt;       &lt;hr&gt;</span><br><span class="line">&gt;       &lt;form action=<span class="string">"login_check.jsp"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">&gt;           &lt;table border=<span class="string">"1"</span>&gt;</span><br><span class="line">&gt;               &lt;tr&gt;</span><br><span class="line">&gt;                   &lt;td colspan="2"&gt;Users Login&lt;/td&gt;</span><br><span class="line">&gt;               &lt;/tr&gt;</span><br><span class="line">&gt;               &lt;tr&gt;</span><br><span class="line">&gt;                   &lt;td&gt;Login ID: &lt;/td&gt;</span><br><span class="line">&gt;                   &lt;td&gt;&lt;input type="text" name="id"&gt;&lt;/td&gt;</span><br><span class="line">&gt;               &lt;/tr&gt;</span><br><span class="line">&gt;               &lt;tr&gt;</span><br><span class="line">&gt;                   &lt;td&gt;Password: &lt;/td&gt;</span><br><span class="line">&gt;                   &lt;td&gt;&lt;input type="password" name="password"&gt;&lt;/td&gt;</span><br><span class="line">&gt;               &lt;/tr&gt;</span><br><span class="line">&gt;               &lt;tr&gt;</span><br><span class="line">&gt;                   &lt;td colspan=<span class="string">"2"</span>&gt;</span><br><span class="line">&gt;                       &lt;input  type=<span class="string">"submit"</span> value=<span class="string">"Submit"</span>&gt;</span><br><span class="line">&gt;                       &lt;input type=<span class="string">"reset"</span> value=<span class="string">"Reset"</span>&gt;</span><br><span class="line">&gt;                   &lt;/td&gt;</span><br><span class="line">&gt;               &lt;/tr&gt;</span><br><span class="line">&gt;           &lt;/table&gt;</span><br><span class="line">&gt;       &lt;/form&gt;</span><br><span class="line">&gt;   &lt;/div&gt;</span><br><span class="line">&gt;   &lt;/body&gt;</span><br><span class="line">&gt;   &lt;/html&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="2"><li><p>login_check.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&gt;   &lt;%--</span><br><span class="line">&gt;     Created by IntelliJ IDEA.</span><br><span class="line">&gt;     User: li</span><br><span class="line">&gt;     Date: <span class="number">2020</span>/<span class="number">5</span>/<span class="number">9</span></span><br><span class="line">&gt;     Time: <span class="number">10</span>:<span class="number">53</span></span><br><span class="line">&gt;     To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">&gt;   --%&gt;</span><br><span class="line">&gt;   &lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&gt;   &lt;%@ page <span class="keyword">import</span>=<span class="string">"java.sql.*"</span>%&gt;</span><br><span class="line">&gt;   &lt;%@ page <span class="keyword">import</span>=<span class="string">"javax.xml.stream.events.StartDocument"</span> %&gt;</span><br><span class="line">&gt;   &lt;%@ page <span class="keyword">import</span>=<span class="string">"javax.print.attribute.standard.PresentationDirection"</span> %&gt;</span><br><span class="line">&gt;   &lt;html&gt;</span><br><span class="line">&gt;   &lt;head&gt;</span><br><span class="line">&gt;       &lt;title&gt;Check&lt;/title&gt;</span><br><span class="line">&gt;   &lt;/head&gt;</span><br><span class="line">&gt;   &lt;body&gt;</span><br><span class="line">&gt;   </span><br><span class="line">&gt;   &lt;%!</span><br><span class="line">&gt;       <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DRIVER = <span class="string">"com.mysql.jdbc.Driver"</span>;</span><br><span class="line">&gt;       <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String URL = <span class="string">"jdbc:mysql://localhost:3306/logintest?characterEncoding=UTF-8&amp;serverTimezone=GMT%2B8"</span>;</span><br><span class="line">&gt;       <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String USER = <span class="string">"####"</span>;</span><br><span class="line">&gt;       <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PASSWORD = <span class="string">"####"</span>;</span><br><span class="line">&gt;   %&gt;</span><br><span class="line">&gt;   &lt;%</span><br><span class="line">&gt;       Connection con = <span class="keyword">null</span>;          <span class="comment">//数据库连接对象</span></span><br><span class="line">&gt;       PreparedStatement pstmt = <span class="keyword">null</span>; <span class="comment">//数据库操作</span></span><br><span class="line">&gt;       ResultSet res = <span class="keyword">null</span>;           <span class="comment">//结果集</span></span><br><span class="line">&gt;       <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;           <span class="comment">//是否登录成功标志</span></span><br><span class="line">&gt;       String name = <span class="keyword">null</span>;</span><br><span class="line">&gt;   %&gt;</span><br><span class="line">&gt;   &lt;%</span><br><span class="line">&gt;       <span class="keyword">try</span> &#123;</span><br><span class="line">&gt;           Class.forName(DRIVER);       <span class="comment">//加载驱动</span></span><br><span class="line">&gt;           <span class="keyword">try</span> &#123;</span><br><span class="line">&gt;               con = DriverManager.getConnection(URL,USER,PASSWORD);  <span class="comment">//获取数据库连接</span></span><br><span class="line">&gt;           &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">&gt;               System.out.println(e.toString());</span><br><span class="line">&gt;           &#125;</span><br><span class="line">&gt;           String sql = <span class="string">"SELECT name FROM admininfo WHERE id=? AND password=?"</span>;</span><br><span class="line">&gt;           <span class="comment">/*这个语句中的？表示占位符，相当于一个未知量，通过下面的setString方法，可以填充占位符的值*/</span></span><br><span class="line">&gt;   </span><br><span class="line">&gt;           pstmt = con.prepareStatement(sql);   <span class="comment">//实例化数据库操作对象</span></span><br><span class="line">&gt;   </span><br><span class="line">&gt;           <span class="comment">/*这里的request是从login.jsp页面表单提交的数据，经过封装，传递过来，分别有两个参数 id和password*/</span></span><br><span class="line">&gt;           <span class="comment">/*通过request带有的方法可以分别获取到传递的数据*/</span></span><br><span class="line">&gt;           <span class="keyword">try</span> &#123;</span><br><span class="line">&gt;               pstmt.setString(<span class="number">1</span>,request.getParameter(<span class="string">"id"</span>));</span><br><span class="line">&gt;               pstmt.setString(<span class="number">2</span>,request.getParameter(<span class="string">"password"</span>));</span><br><span class="line">&gt;           &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">&gt;               System.out.println(e.toString());</span><br><span class="line">&gt;           &#125;</span><br><span class="line">&gt;   </span><br><span class="line">&gt;           res = pstmt.executeQuery();   <span class="comment">//此语句只能查询，若要执行insert delete update等操作 须使用execute方法</span></span><br><span class="line">&gt;   </span><br><span class="line">&gt;           <span class="keyword">if</span>(res.next())&#123;</span><br><span class="line">&gt;               name = res.getString(<span class="number">1</span>);  <span class="comment">//参数1表示取第一列值</span></span><br><span class="line">&gt;               flag = <span class="keyword">true</span>;</span><br><span class="line">&gt;           &#125;</span><br><span class="line">&gt;       &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">&gt;           System.out.println(e.toString());</span><br><span class="line">&gt;       &#125;</span><br><span class="line">&gt;   </span><br><span class="line">&gt;       <span class="comment">//finally语句是在try的return语句执行之后，return返回之前执行</span></span><br><span class="line">&gt;       <span class="keyword">finally</span> &#123;</span><br><span class="line">&gt;           <span class="keyword">try</span> &#123;</span><br><span class="line">&gt;               <span class="keyword">if</span>(res != <span class="keyword">null</span>)&#123;</span><br><span class="line">&gt;                   res.close();</span><br><span class="line">&gt;               &#125;</span><br><span class="line">&gt;               <span class="keyword">if</span>(pstmt != <span class="keyword">null</span>)&#123;</span><br><span class="line">&gt;                   pstmt.close();</span><br><span class="line">&gt;               &#125;</span><br><span class="line">&gt;               <span class="keyword">if</span>(con != <span class="keyword">null</span>)&#123;</span><br><span class="line">&gt;                   con.close();</span><br><span class="line">&gt;               &#125;</span><br><span class="line">&gt;           &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">&gt;               System.out.println(e.toString());</span><br><span class="line">&gt;           &#125;</span><br><span class="line">&gt;       &#125;</span><br><span class="line">&gt;   %&gt;</span><br><span class="line">&gt;   </span><br><span class="line">&gt;   &lt;%</span><br><span class="line">&gt;       <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">&gt;   %&gt;</span><br><span class="line">&gt;              &lt;jsp:forward page=<span class="string">"login_success.jsp"</span>&gt;</span><br><span class="line">&gt;                  &lt;jsp:param name=<span class="string">"username"</span> value=<span class="string">"&lt;%=name%&gt;"</span>/&gt;</span><br><span class="line">&gt;              &lt;/jsp:forward&gt;</span><br><span class="line">&gt;   &lt;%</span><br><span class="line">&gt;       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">&gt;   %&gt;</span><br><span class="line">&gt;             &lt;jsp:forward page="login_failure.jsp"&gt;&lt;/jsp:forward&gt;</span><br><span class="line">&gt;   &lt;%</span><br><span class="line">&gt;       &#125;</span><br><span class="line">&gt;   %&gt;</span><br><span class="line">&gt;   </span><br><span class="line">&gt;   &lt;/body&gt;</span><br><span class="line">&gt;   &lt;/html&gt;</span><br><span class="line">&gt;   </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="3"><li><p>login_success.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&gt;   &lt;%--</span><br><span class="line">&gt;     Created by IntelliJ IDEA.</span><br><span class="line">&gt;     User: li</span><br><span class="line">&gt;     Date: <span class="number">2020</span>/<span class="number">5</span>/<span class="number">9</span></span><br><span class="line">&gt;     Time: <span class="number">10</span>:<span class="number">53</span></span><br><span class="line">&gt;     To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">&gt;   --%&gt;</span><br><span class="line">&gt;   &lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&gt;   &lt;html&gt;</span><br><span class="line">&gt;   &lt;head&gt;</span><br><span class="line">&gt;       &lt;title&gt;Login success&lt;/title&gt;</span><br><span class="line">&gt;   &lt;/head&gt;</span><br><span class="line">&gt;   &lt;body&gt;</span><br><span class="line">&gt;   &lt;h1&gt;Login success!&lt;/h1&gt;</span><br><span class="line">&gt;   &lt;h2&gt;Welcome!</span><br><span class="line">&gt;       &lt;span style=<span class="string">"color: red"</span>&gt;</span><br><span class="line">&gt;           &lt;%=request.getParameter(<span class="string">"username"</span>)%&gt;</span><br><span class="line">&gt;       &lt;/span&gt;</span><br><span class="line">&gt;   &lt;/h2&gt;</span><br><span class="line">&gt;   &lt;/body&gt;</span><br><span class="line">&gt;   &lt;/html&gt;</span><br><span class="line">&gt;   </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="4"><li><p>login_failure.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;   &lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&gt;   &lt;html&gt;</span><br><span class="line">&gt;   &lt;head&gt;</span><br><span class="line">&gt;       &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&gt;       &lt;title&gt;Failure&lt;/title&gt;</span><br><span class="line">&gt;   &lt;/head&gt;</span><br><span class="line">&gt;   &lt;body&gt;</span><br><span class="line">&gt;   &lt;h1&gt;Login failure&lt;/h1&gt;</span><br><span class="line">&gt;   &lt;h2&gt;</span><br><span class="line">&gt;       Please <span class="keyword">try</span> again!</span><br><span class="line">&gt;       &lt;a href="login.jsp" style="color: red"&gt;Click here!&lt;/a&gt;</span><br><span class="line">&gt;   &lt;/h2&gt;</span><br><span class="line">&gt;   &lt;/body&gt;</span><br><span class="line">&gt;   &lt;/html&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><blockquote><ol><li><p>在数据库连接关闭的时候需要加入判断逻辑，判断为非空才能正常关闭；</p></li><li><p>需要项目导入<a href>mysql-connector-java-8.0.20.jar</a>包，首先要配置到项目下，然后再添加到Tomcat的lib库中。并且要注意版本的匹配问题，否则会导致连接失败。</p></li><li><p>项目中我的各个版本为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;   Mysql: 8.0.18</span><br><span class="line">&gt;   Tomcat: 9.0.34</span><br><span class="line">&gt;   connetion-jar包: 8.0.20</span><br><span class="line">&gt;   jdk: 11.0.6</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><h4 id="附上最后成功的截图"><a href="#附上最后成功的截图" class="headerlink" title="附上最后成功的截图"></a>附上最后成功的截图</h4><p><img src="//haoyuliugh.github.io/2020/05/09/JSP实现简单登录/1.JPG" alt="01"></p><h4 id="为什么要用Tomcat？"><a href="#为什么要用Tomcat？" class="headerlink" title="为什么要用Tomcat？"></a>为什么要用Tomcat？</h4><p>一般的，可以用html语言直接编写前端界面，并且通过js渲染，css美化。但这个过程是一个静态的，只是相当于把数据发送给浏览器进行解析，相当于面对客户端的。</p><p>而Tomcat是生成一个动态的页面，在html中嵌入jsp语言，生成的页面是通过服务器端发送出来。而Tomcat相当于一个中间的工具，帮助我们实现了这个过程，把我们自己的电脑变成了服务器端。</p><p>关于具体机制，下次学到再说 ☆(￣▽￣)/$:*</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在接触了JSP后，跟着老师简单做了一个小demo，模拟的登录操作&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="JAVA学习" scheme="http://haoyuliugh.github.io/categories/JAVA%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="JSP HTML" scheme="http://haoyuliugh.github.io/tags/JSP-HTML/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序开发基础</title>
    <link href="http://haoyuliugh.github.io/2020/05/08/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/"/>
    <id>http://haoyuliugh.github.io/2020/05/08/微信小程序开发基础/</id>
    <published>2020-05-08T14:21:58.000Z</published>
    <updated>2021-04-01T23:02:04.182Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><blockquote><p>微信小程序开发跟前端网页开发流程类似，它是基于微信的架构下，所以须使用专门的环境。即便如此，还是有很多的问题。</p></blockquote><a id="more"></a><h4 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h4><blockquote><ol><li><p>首先需要到<a href="https://mp.weixin.qq.com/cgi-bin/wx" target="_blank" rel="noopener">官网</a>注册一个小程序账号，之后一路填写相关信息。注意！在选择小程序类别的时候，第一类别如果选的游戏，那么只能进行小游戏开发；选择其他类别，才可以进行普通小程序开发。</p></li><li><p>注册完成后，可看到如下页面<img src="//haoyuliugh.github.io/2020/05/08/微信小程序开发基础/01.JPG" alt="01"></p></li><li><p>在-开发-开发设置目录下，可以看到自己已经创建好的小程序ID，小程序秘钥</p></li><li><p>接下来根据系统类型在官网下载<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noopener">开发环境</a></p></li><li><p>配置好后进入，会要求填写之前生成的小程序ID，填写完毕后即可进入开发界面</p></li></ol></blockquote><h4 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h4><blockquote><ol><li>在环境内，可以看到类似如下的文件结构</li></ol><p><img src="//haoyuliugh.github.io/2020/05/08/微信小程序开发基础/02.JPG" alt="02"></p><p>  其中</p><ul><li>/images 目录为自定义的文件夹，用于存放图片</li><li>/pages 目录用于存放页面文件</li><li>/utils 目录用于存放工具文件</li><li>/app.js 存放页面初识的状态，一般为登录状态</li><li>/app.json 存放所有的页面路径</li><li>/app.wxss 存放总页面样式文件，类比css文件</li></ul></blockquote><h4 id="开发准备"><a href="#开发准备" class="headerlink" title="开发准备"></a>开发准备</h4><blockquote><ol><li><p>在开发环境内可以看到一个默认生成的页面，功能是点击获取头像。在第一次开发时，可以将 /util文件全部删除，将/pages目录下的logs文件全部删除，将index.wxml，index.wxss，index.js中全部代码删除</p></li><li><p>在index.js中输入page 通过tab补全page页面函数</p><p><img src="//haoyuliugh.github.io/2020/05/08/微信小程序开发基础/03.JPG" alt="03"></p></li><li><p>此时的一个页面文件结构如下所示</p><p><img src="//haoyuliugh.github.io/2020/05/08/微信小程序开发基础/04.JPG" alt="04"></p></li><li><p>此时一个index文件夹表示一个页面的全部逻辑，同理，可以创建多个文件，生成多个文件夹</p></li><li><p>wxml文件以及wxss文件分别对应html和css文件</p></li><li><p>每创建一个新的页面，需要在app.json中声明路径，否则会有报错</p><p><img src="//haoyuliugh.github.io/2020/05/08/微信小程序开发基础/05.JPG" alt="05"></p><p>如图所示，第一个页面路径表示初始页面，也就是主页面；后面的路径表示其他自定义的页面</p></li><li><p>若想要实现各个页面之间的跳转逻辑，可在主页面的js文件中自定义跳转函数（官方类库 wx.navigateto），当遇到跳转事件时就可以以完成跳转</p><p><img src="//haoyuliugh.github.io/2020/05/08/微信小程序开发基础/06.JPG" alt="06"></p><p>如图所示，此函数表示遇到事件执行时跳转到url对应路径下</p></li></ol></blockquote><h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><blockquote><ol><li>第一次接触时，结合网上代码想要实现一个贪吃蛇小程序，结果在调试端正常执行，在手机端无法正常运行。原因是微信原则上不允许开发者在小程序上开发游戏，所以进行了限制，如贪吃蛇中用到的页面刷新逻辑在手机端被加以了限制。</li><li>微信小程序在打包上传时有大小限制，2M，所以如果文件中有图片或者其他大文件，需压缩处理，或者将图片放到网上图床。</li><li>第一次上传时可以直接选体验版上传，不审核。</li></ol></blockquote><h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><blockquote><p>贴一个当时想用requestAnimationFrame方法结果发现被限制了，只能在小游戏开发中用，然后找到了一个别人做好的<a href="https://www.dennic365.com/blog/?p=87" target="_blank" rel="noopener">轮子</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> lastFrameTime = <span class="number">0</span>;</span><br><span class="line">&gt; <span class="comment">// 模拟 requestAnimationFrame</span></span><br><span class="line">&gt; <span class="keyword">var</span> doAnimationFrame = <span class="function"><span class="keyword">function</span> (<span class="params">callback</span>) </span>&#123;</span><br><span class="line">&gt;     <span class="keyword">var</span> currTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">&gt;     <span class="keyword">var</span> timeToCall = <span class="built_in">Math</span>.max(<span class="number">0</span>, <span class="number">16</span> - (currTime - lastFrameTime));</span><br><span class="line">&gt;     <span class="keyword">var</span> id = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; callback(currTime + timeToCall); &#125;, timeToCall);</span><br><span class="line">&gt;     lastFrameTime = currTime + timeToCall;</span><br><span class="line">&gt;     <span class="keyword">return</span> id;</span><br><span class="line">&gt; &#125;;</span><br><span class="line">&gt; <span class="comment">// 模拟 cancelAnimationFrame</span></span><br><span class="line">&gt; <span class="keyword">var</span> abortAnimationFrame = <span class="function"><span class="keyword">function</span> (<span class="params">id</span>) </span>&#123;</span><br><span class="line">&gt;     clearTimeout(id)</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>以及，我的图标在哪找的<a href="https://icons8.cn/" target="_blank" rel="noopener">这里！</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;微信小程序开发跟前端网页开发流程类似，它是基于微信的架构下，所以须使用专门的环境。即便如此，还是有很多的问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="微信小程序学习" scheme="http://haoyuliugh.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>汇编中变址寻址操作易错点</title>
    <link href="http://haoyuliugh.github.io/2020/05/07/%E6%B1%87%E7%BC%96%E4%B8%AD%E5%8F%98%E5%9D%80%E5%AF%BB%E5%9D%80%E6%93%8D%E4%BD%9C%E6%98%93%E9%94%99%E7%82%B9/"/>
    <id>http://haoyuliugh.github.io/2020/05/07/汇编中变址寻址操作易错点/</id>
    <published>2020-05-07T09:05:18.000Z</published>
    <updated>2020-05-08T15:37:08.003Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><blockquote><p>在汇编语言中，针对数组操作，可以使用间接寻址，或者变址寻址。在变址寻址操作时，遇到了一系列问题，遂做总结，避免再犯。</p></blockquote><a id="more"></a><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><blockquote><p>有一个带有8个WORD型数据的数组，想要对其偶数项进行求和</p></blockquote><h4 id="间接寻址方法"><a href="#间接寻址方法" class="headerlink" title="间接寻址方法"></a>间接寻址方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">; Operators (Operator.asm)</span><br><span class="line"></span><br><span class="line">; Demonstrates the TYPE, LENGTHOF, and SIZEOF operators</span><br><span class="line"></span><br><span class="line">.386</span><br><span class="line">.model flat,stdcall</span><br><span class="line">.stack 4096</span><br><span class="line">ExitProcess PROTO,stdcall:dword</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">arrofw WORD 1,2,1,2,1,2,1,2 ;数据中，偶数序求和结果为2*4，奇数序求和为1*4</span><br><span class="line">sum WORD 0</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main PROC</span><br><span class="line">mov EDI,OFFSET arrofw     </span><br><span class="line">add EDI,2                 ;现在指向第二个数据</span><br><span class="line">mov ECX,LENGTHOF arrofw   </span><br><span class="line">mov AX,0</span><br><span class="line">L1:</span><br><span class="line">add AX,[EDI]              ;依次累加</span><br><span class="line">add EDI,2*TYPE arrofw     ;求偶数序，所以向后偏移</span><br><span class="line">    LOOP L1</span><br><span class="line">    mov sum,AX   </span><br><span class="line"></span><br><span class="line">invoke ExitProcess,0</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><h4 id="带比例因子的变址寻址方法"><a href="#带比例因子的变址寻址方法" class="headerlink" title="带比例因子的变址寻址方法"></a>带比例因子的变址寻址方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">; Operators (Operator.asm)</span><br><span class="line"></span><br><span class="line">; Demonstrates the TYPE, LENGTHOF, and SIZEOF operators</span><br><span class="line"></span><br><span class="line">.386</span><br><span class="line">.model flat,stdcall</span><br><span class="line">.stack 4096</span><br><span class="line">ExitProcess PROTO,stdcall:dword</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">arrofw WORD 1,2,1,2,1,2,1,2 ;数据中，偶数序求和结果为2*4，奇数序求和为1*4</span><br><span class="line">sum WORD 0</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main PROC</span><br><span class="line">mov AX,0     </span><br><span class="line">movESI,1    </span><br><span class="line">mov ECX,LENGTHOF arrofw</span><br><span class="line">L1:</span><br><span class="line">add AX,arrofw[ESI*TYPE arrofw]  ;依次累加</span><br><span class="line">add ESI,2                      ;求偶数序，所以每次加2</span><br><span class="line">    LOOP L1</span><br><span class="line">    mov sum,AX</span><br><span class="line"></span><br><span class="line">invoke ExitProcess,0</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure><h4 id="犯的错误"><a href="#犯的错误" class="headerlink" title="犯的错误"></a>犯的错误</h4><blockquote><ul><li>在使用寄存器时，没有考虑数据类型为WORD型，应该使用16位寄存器AX，而不是32位的EAX等等寄存器；</li><li>为什么又使用了EDI，ESI等寄存器？因为在OFFSET指令中，返回的地址一般为32位的，所以用32位的EDI寄存器来存；ESI同理。 <strong>这里不能用DI或者SI</strong></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在汇编语言中，针对数组操作，可以使用间接寻址，或者变址寻址。在变址寻址操作时，遇到了一系列问题，遂做总结，避免再犯。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="汇编语言" scheme="http://haoyuliugh.github.io/categories/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="易错点" scheme="http://haoyuliugh.github.io/tags/%E6%98%93%E9%94%99%E7%82%B9/"/>
    
      <category term="间接寻址" scheme="http://haoyuliugh.github.io/tags/%E9%97%B4%E6%8E%A5%E5%AF%BB%E5%9D%80/"/>
    
      <category term="带比例因子的变址寻址" scheme="http://haoyuliugh.github.io/tags/%E5%B8%A6%E6%AF%94%E4%BE%8B%E5%9B%A0%E5%AD%90%E7%9A%84%E5%8F%98%E5%9D%80%E5%AF%BB%E5%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>围棋算法</title>
    <link href="http://haoyuliugh.github.io/2019/09/21/%E5%9B%B4%E6%A3%8B%E7%AE%97%E6%B3%95/"/>
    <id>http://haoyuliugh.github.io/2019/09/21/围棋算法/</id>
    <published>2019-09-21T10:14:04.000Z</published>
    <updated>2020-05-09T09:11:48.254Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><blockquote><p>围棋是世界范围内非常流行的棋类运动，是竞技体育项目。围棋的规则非常简单，做为编程初学者逻辑思维训练非常合适。 </p><a id="more"></a><p>标准围棋棋盘是19行19列。为了简化起见，此处简化成9行9列。<br>标准围棋对弈方法是黑方和白方轮番下棋，为了简化，本算法引擎，支持任意的落子顺序，即落子顺序由程序输入<br>输入(棋子角色，棋子行号，棋子列号)<br>​        1 2 3<br>    表示白子放第2行第3列<br>    2 3 3<br>    表示黑子放第3行第3列<br>    本算法引擎实现的是。从落子序列到棋盘状态的映射，当落子完成后，输出最终的棋盘状态。<br>    +代表空白，o代表白棋，#代表黑棋<br>    例如<br>1 1 1<br>1 1 2<br>1 2 1<br>1 2 2<br>输出<br>四颗白子形成的正方形状<br>围棋对战算法引擎需要实现各种围棋规则(提子，禁入点，反扑，劫)。具体的规则示意图请自行网上查阅。 </p></blockquote><h4 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h4><blockquote><p> 输入：</p><p> 1 1 1<br> 2 2 2 </p><p>输出：</p><p>​       1  2  3  4  5  6  7  8  9<br>  1   o  +  +  +  +  +  +  +  +<br>  2   +  #  +  +  +  +  +  +  +<br>  3   +  +  +  +  +  +  +  +  +<br>  4   +  +  +  +  +  +  +  +  +<br>  5   +  +  +  +  +  +  +  +  +<br>  6   +  +  +  +  +  +  +  +  +<br>  7   +  +  +  +  +  +  +  +  +<br>  8   +  +  +  +  +  +  +  +  +<br>  9   +  +  +  +  +  +  +  +  +</p></blockquote><h4 id="逻辑思路"><a href="#逻辑思路" class="headerlink" title="逻辑思路"></a>逻辑思路</h4><blockquote><ol><li><p>输入数据后，判断该位置是否为空，空位可落子</p></li><li><p>每次输入数据时调用jieInit（）函数初始化，（用一个数组单独记录棋盘上一轮被提走的棋子的位置）</p></li><li><p>调用judgeLive（）函数判断自己落子的位置是否会处于自杀状态</p><p> （1）如果是，则调用chessAnotherJudge（）函数判断周围是否有敌方棋子即将被杀（反扑）</p><p> ​         a.如果是，则执行反扑chessAnotherClear（）（寻找并清除周围敌方濒死棋子）<br> ​         b.如果否，则该点为禁入点，不可落子<br> ​（2）如果否，则直接判断周围是否有敌方棋子即将被杀，并视情况执行清除敌方命令</p></li><li><p>打劫，每次有棋子被提走后，jie[][]会记录提走的位置，并将记录保存到下一次输入后，在下一次输入判断时，会直接判断是否为劫</p></li></ol></blockquote><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line">&gt; <span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">&gt; <span class="comment">/*---------------------全局变量------------------*/</span></span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="keyword">int</span> chessData[<span class="number">9</span>][<span class="number">9</span>];     <span class="comment">//定义每个位置状态，0为空，1为白，2为黑</span></span><br><span class="line">&gt; <span class="keyword">const</span> <span class="keyword">char</span> chessChar[<span class="number">3</span>]&#123; <span class="string">'+'</span>,<span class="string">'o'</span>,<span class="string">'#'</span> &#125;;</span><br><span class="line">&gt; <span class="keyword">bool</span> jie[<span class="number">9</span>][<span class="number">9</span>];</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment">/*---------------------函数-------------------*/</span></span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment">/*打印棋盘*/</span></span><br><span class="line">&gt; <span class="function"><span class="keyword">void</span> <span class="title">showChessBoard</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="built_in">cout</span> &lt;&lt; <span class="string">"   "</span>;</span><br><span class="line">&gt; <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="built_in">cout</span> &lt;&lt; <span class="string">"  "</span> &lt;&lt; i + <span class="number">1</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&gt; <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="built_in">cout</span> &lt;&lt; <span class="string">" "</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">"   "</span>;</span><br><span class="line">&gt; <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">9</span>; j++)</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">int</span> data = chessData[i][j];</span><br><span class="line">&gt; <span class="built_in">cout</span> &lt;&lt; chessChar[data] &lt;&lt; <span class="string">"  "</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment">/*寻找相反状态*/</span></span><br><span class="line">&gt; <span class="function"><span class="keyword">int</span> <span class="title">anotherRole</span><span class="params">(<span class="keyword">int</span> qi)</span></span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">if</span> (qi == <span class="number">1</span>)</span><br><span class="line">&gt; <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&gt; <span class="keyword">if</span> (qi == <span class="number">2</span>)</span><br><span class="line">&gt; <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment">/*具体执行递归判定*/</span></span><br><span class="line">&gt; <span class="function"><span class="keyword">bool</span> <span class="title">judgeNeigbourLive</span><span class="params">(<span class="keyword">int</span> role, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">bool</span> footprint[])</span></span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">if</span> (x &lt; <span class="number">0</span> || x &gt;= <span class="number">9</span> || y &lt; <span class="number">0</span> || y &gt;= <span class="number">9</span>)<span class="comment">//如果我超界，返回false</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="keyword">if</span> (footprint[x * <span class="number">9</span> + y] == <span class="literal">true</span>)      <span class="comment">//如果我来过这个地方，返回false，不在判断</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="keyword">if</span> (chessData[x][y] == <span class="number">0</span>)              <span class="comment">//如果我为空，则邻居必定存活，即有气</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="keyword">if</span> (chessData[x][y] == anotherRole(role))<span class="comment">//如果我跟邻居的状态不同，则不判断</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; footprint[x * <span class="number">9</span> + y] = <span class="literal">true</span>;<span class="comment">//每次判断完一个位置后就把该位置设为true，表示来过</span></span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment">//如果我跟邻居的状态相同，则递归判断邻居</span></span><br><span class="line">&gt; <span class="keyword">return</span> judgeNeigbourLive(role, x - <span class="number">1</span>, y, footprint)</span><br><span class="line">&gt; || judgeNeigbourLive(role, x + <span class="number">1</span>, y, footprint)</span><br><span class="line">&gt; || judgeNeigbourLive(role, x, y - <span class="number">1</span>, footprint)</span><br><span class="line">&gt; || judgeNeigbourLive(role, x, y + <span class="number">1</span>, footprint);</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment">/*递归判定是否存活*/</span></span><br><span class="line">&gt; <span class="function"><span class="keyword">bool</span> <span class="title">judgeLive</span><span class="params">(<span class="keyword">int</span> role, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">bool</span> footprint[<span class="number">9</span> * <span class="number">9</span>] = &#123; <span class="literal">false</span> &#125;;  <span class="comment">//用足迹记录下每一次走过的位置，避免重复判定引起无穷递归</span></span><br><span class="line">&gt; <span class="keyword">return</span> judgeNeigbourLive(role, x - <span class="number">1</span>, y, footprint)</span><br><span class="line">&gt; || judgeNeigbourLive(role, x + <span class="number">1</span>, y, footprint)</span><br><span class="line">&gt; || judgeNeigbourLive(role, x, y - <span class="number">1</span>, footprint)</span><br><span class="line">&gt; || judgeNeigbourLive(role, x, y + <span class="number">1</span>, footprint);</span><br><span class="line">&gt; &#125; </span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment">/*清除传入点周围的敌方棋子*/</span></span><br><span class="line">&gt; <span class="function"><span class="keyword">void</span> <span class="title">chessClear</span><span class="params">(<span class="keyword">int</span> qi, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> <span class="comment">//递归寻找所有相同状态的点并将其提起</span></span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">if</span> (chessData[x - <span class="number">1</span>][y] == qi)</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; chessData[x - <span class="number">1</span>][y] = <span class="number">0</span>;</span><br><span class="line">&gt; jie[x - <span class="number">1</span>][y] = <span class="literal">true</span>;</span><br><span class="line">&gt; chessClear(qi, x - <span class="number">1</span>, y);</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="keyword">if</span> (chessData[x + <span class="number">1</span>][y] == qi)</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; chessData[x + <span class="number">1</span>][y] = <span class="number">0</span>;</span><br><span class="line">&gt; jie[x + <span class="number">1</span>][y] = <span class="literal">true</span>;</span><br><span class="line">&gt; chessClear(qi, x + <span class="number">1</span>, y);</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="keyword">if</span> (chessData[x][y - <span class="number">1</span>] == qi)</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; chessData[x][y - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&gt; jie[x][y - <span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">&gt; chessClear(qi, x, y - <span class="number">1</span>);</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="keyword">if</span> (chessData[x][y + <span class="number">1</span>] == qi)</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; chessData[x][y + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&gt; jie[x][y + <span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">&gt; chessClear(qi, x, y + <span class="number">1</span>);</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment">/*寻找传入点周围的濒死敌方棋子并提供信息给chessClear函数*/</span></span><br><span class="line">&gt; <span class="function"><span class="keyword">void</span> <span class="title">chessAnotherClear</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> <span class="comment">//判断落子后邻居是否存活，若死亡，则连片提子</span></span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">if</span> (judgeLive(chessData[x - <span class="number">1</span>][y], x - <span class="number">1</span>, y) == <span class="literal">false</span>)   <span class="comment">//如果点左边不可存活，调用函数删除与该点连成片的所有点（上下左右）</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; chessClear(chessData[x - <span class="number">1</span>][y], x - <span class="number">1</span>, y);</span><br><span class="line">&gt; chessData[x - <span class="number">1</span>][y] = <span class="number">0</span>;</span><br><span class="line">&gt; jie[x - <span class="number">1</span>][y] = <span class="literal">true</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="keyword">if</span> (judgeLive(chessData[x + <span class="number">1</span>][y], x + <span class="number">1</span>, y) == <span class="literal">false</span>)   <span class="comment">//如果点右边不可存活，调用函数删除与该点连成片的所有点（上下左右）</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; chessClear(chessData[x + <span class="number">1</span>][y], x + <span class="number">1</span>, y);</span><br><span class="line">&gt; chessData[x + <span class="number">1</span>][y] = <span class="number">0</span>;</span><br><span class="line">&gt; jie[x + <span class="number">1</span>][y] = <span class="literal">true</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="keyword">if</span> (judgeLive(chessData[x][y + <span class="number">1</span>], x, y + <span class="number">1</span>) == <span class="literal">false</span>)   <span class="comment">//如果点上边不可存活，调用函数删除与该点连成片的所有点（上下左右）</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; chessClear(chessData[x][y + <span class="number">1</span>], x, y + <span class="number">1</span>);</span><br><span class="line">&gt; chessData[x][y + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&gt; jie[x][y + <span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="keyword">if</span> (judgeLive(chessData[x][y - <span class="number">1</span>], x, y - <span class="number">1</span>) == <span class="literal">false</span>)   <span class="comment">//如果点下边不可存活，调用函数删除与该点连成片的所有点（上下左右）</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; chessClear(chessData[x][y - <span class="number">1</span>], x, y - <span class="number">1</span>);</span><br><span class="line">&gt; chessData[x][y - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&gt; jie[x][y - <span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment">/*判定传入点周围是否存在濒死敌方棋子*/</span></span><br><span class="line">&gt; <span class="function"><span class="keyword">bool</span> <span class="title">chessAnotherJudge</span><span class="params">(<span class="keyword">int</span> qi,<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">if</span> ((judgeLive(chessData[x - <span class="number">1</span>][y], x - <span class="number">1</span>, y) == <span class="literal">false</span> &amp;&amp; chessData[x - <span class="number">1</span>][y]==anotherRole(qi))  <span class="comment">//如果四周存在必死的棋子，且必死的棋子为敌方棋子，则返回1，表示这个位置可以落子</span></span><br><span class="line">&gt; || judgeLive(chessData[x + <span class="number">1</span>][y], x + <span class="number">1</span>, y) == <span class="literal">false</span> &amp;&amp; chessData[x + <span class="number">1</span>][y] == anotherRole(qi)</span><br><span class="line">&gt; || judgeLive(chessData[x][y + <span class="number">1</span>], x, y + <span class="number">1</span>) == <span class="literal">false</span> &amp;&amp; chessData[x][y + <span class="number">1</span>] == anotherRole(qi)</span><br><span class="line">&gt; || judgeLive(chessData[x][y - <span class="number">1</span>], x, y - <span class="number">1</span>) == <span class="literal">false</span> &amp;&amp; chessData[x][y - <span class="number">1</span>] == anotherRole(qi))</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="keyword">else</span></span><br><span class="line">&gt; <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&gt; </span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment">/*初始化jie数组*/</span></span><br><span class="line">&gt; <span class="function"><span class="keyword">void</span> <span class="title">jieInit</span><span class="params">()</span></span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">9</span>; j++)</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; jie[i][j] = <span class="literal">false</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment">/*----------------------主函数------------------------*/</span></span><br><span class="line">&gt; <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; jieInit();</span><br><span class="line">&gt; <span class="keyword">int</span> qi, x, y;</span><br><span class="line">&gt; <span class="keyword">for</span> (; <span class="built_in">cin</span> &gt;&gt; qi &gt;&gt; x &gt;&gt; y;)</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">if</span> (chessData[x - <span class="number">1</span>][y - <span class="number">1</span>] == <span class="number">0</span> &amp;&amp; jie[x - <span class="number">1</span>][y - <span class="number">1</span>] == <span class="literal">false</span>)</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; jieInit();</span><br><span class="line">&gt; chessData[x - <span class="number">1</span>][y - <span class="number">1</span>] = qi;</span><br><span class="line">&gt; <span class="keyword">if</span> (judgeLive(qi, x - <span class="number">1</span>, y - <span class="number">1</span>) == <span class="literal">true</span>) <span class="comment">//如果自己可以存活</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; chessAnotherClear(x - <span class="number">1</span>, y - <span class="number">1</span>); <span class="comment">//寻找并清除敌方无气子</span></span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="keyword">if</span> (judgeLive(qi, x - <span class="number">1</span>, y - <span class="number">1</span>) == <span class="literal">false</span>) <span class="comment">//如果自己不可存活</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; <span class="keyword">if</span> (chessAnotherJudge(qi,x - <span class="number">1</span>, y - <span class="number">1</span>) == <span class="number">0</span>) <span class="comment">//如果周围可以存活，则禁入</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; chessData[x - <span class="number">1</span>][y - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="keyword">if</span> (chessAnotherJudge(qi,x - <span class="number">1</span>, y - <span class="number">1</span>) == <span class="number">1</span>) <span class="comment">//如果周围不可存活，则提子</span></span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; chessAnotherClear( x - <span class="number">1</span>, y - <span class="number">1</span>);</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; showChessBoard();</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;围棋是世界范围内非常流行的棋类运动，是竞技体育项目。围棋的规则非常简单，做为编程初学者逻辑思维训练非常合适。 &lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="算法" scheme="http://haoyuliugh.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>前端部分基础知识</title>
    <link href="http://haoyuliugh.github.io/2019/09/02/%E5%89%8D%E7%AB%AF%E9%83%A8%E5%88%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://haoyuliugh.github.io/2019/09/02/前端部分基础知识/</id>
    <published>2019-09-02T13:07:34.000Z</published>
    <updated>2021-04-01T23:01:47.341Z</updated>
    
    <content type="html"><![CDATA[<h4 id="doctype-html的作用"><a href="#doctype-html的作用" class="headerlink" title="doctype html的作用"></a>doctype html的作用</h4><blockquote><p>它是html5标准网页声明,告诉浏览器用最新的 HTML5标准来解析渲染页面；如果不写，浏览器就会进入混杂模式。而混杂模式指的是浏览器用自己的方式解析代码，页面会以一种兼容的方式来显示。混杂模式一般会模拟老站点的行为以防止老站点无法工作。</p></blockquote><a id="more"></a><h4 id="常见的meta标签的含义"><a href="#常见的meta标签的含义" class="headerlink" title="常见的meta标签的含义"></a>常见的meta标签的含义</h4><blockquote><ul><li><p>指定所用的字符集</p><p><code>&lt;meta charset=&quot;utf-8&quot;&gt;</code></p></li><li><p>向搜索引擎说明网页的搜索关键词</p><p><code>&lt;meta name=&quot;keywords&quot; content=&quot;啦啦啦&quot;&gt;</code></p></li><li><p>向搜索引擎说明站点的主要内容</p><p><code>&lt;meta name=&quot;description&quot; content=&quot;啦啦啦&quot;&gt;</code></p></li><li><p>向搜索引擎说明站点的作者</p><p><code>&lt;meta name=&quot;author&quot; content=&quot;CleFke*^▽^*&quot;&gt;</code></p></li><li><p>浏览器的内核控制</p><p><code>&lt;meta name=&quot;renderer&quot; content=&quot;webkit|ie-comp|ie-stand&quot;&gt;</code></p></li></ul></blockquote><h4 id="常见的浏览器的内核"><a href="#常见的浏览器的内核" class="headerlink" title="常见的浏览器的内核"></a>常见的浏览器的内核</h4><blockquote><ul><li>普通的<em>IE浏览器<em>使用的是</em>Trident</em></li><li><em>Firefox<em>使用的是</em>Gecko</em></li><li><em>opera<em>使用的是</em>Presto<em>，以及后面的</em>Blink</em></li><li><em>Safari<em>以及</em>Chrome<em>使用的是</em>WebKit</em></li></ul></blockquote><h4 id="常见的标签以及含义"><a href="#常见的标签以及含义" class="headerlink" title="常见的标签以及含义"></a>常见的标签以及含义</h4><table><thead><tr><th align="center">标签</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center"><code>&lt;html&gt;</code></td><td align="center">HTML页面根元素</td></tr><tr><td align="center"><code>&lt;head&gt;</code></td><td align="center">文档的头部</td></tr><tr><td align="center"><code>&lt;meta&gt;</code></td><td align="center">为机器提供元数据，告诉机器如何解析</td></tr><tr><td align="center"><code>&lt;title&gt;</code></td><td align="center">文档的标题</td></tr><tr><td align="center"><code>&lt;body&gt;</code></td><td align="center">文档的内容</td></tr><tr><td align="center"><code>&lt;div&gt;</code></td><td align="center">块级元素，容器</td></tr><tr><td align="center"><code>&lt;h1&gt;</code></td><td align="center">定义一级标题，类似还有<code>&lt;h2&gt;</code>等</td></tr><tr><td align="center"><code>&lt;p&gt;</code></td><td align="center">定义一个段落</td></tr><tr><td align="center"><code>&lt;a&gt;</code></td><td align="center">定义一个链接，格式为<code>&lt;a href=&quot;网址&quot;&gt;</code></td></tr><tr><td align="center"><code>&lt;span&gt;</code></td><td align="center">内联元素，可用作文本的容器</td></tr><tr><td align="center"><code>&lt;u&gt;</code></td><td align="center">下划线标签</td></tr><tr><td align="center"><code>&lt;em&gt;</code></td><td align="center">强调标签</td></tr><tr><td align="center"><code>&lt;strong&gt;</code></td><td align="center">加重标签</td></tr><tr><td align="center"><code>&lt;table&gt;</code></td><td align="center">表格标签</td></tr><tr><td align="center"><code>&lt;tr&gt;</code></td><td align="center">表格中的行</td></tr><tr><td align="center"><code>&lt;td&gt;</code></td><td align="center">表格中的单元格</td></tr><tr><td align="center"><code>&lt;th&gt;</code></td><td align="center">表格的表头</td></tr><tr><td align="center"><code>&lt;tbody&gt;</code></td><td align="center">表格的主体</td></tr><tr><td align="center"><code>&lt;tfoot&gt;</code></td><td align="center">表格的页脚</td></tr><tr><td align="center"><code>&lt;ol&gt;</code></td><td align="center">有序列表标签</td></tr><tr><td align="center"><code>&lt;ul&gt;</code></td><td align="center">无序列表标签</td></tr><tr><td align="center"><code>&lt;li&gt;</code></td><td align="center">定义列表项目</td></tr><tr><td align="center"><code>&lt;img&gt;</code></td><td align="center">插入图片，格式为<code>&lt;img src=&quot;图片地址&quot;&gt;</code></td></tr><tr><td align="center"><code>&lt;br&gt;</code></td><td align="center">换行标签</td></tr><tr><td align="center"><code>&lt;input&gt;</code></td><td align="center">输入控件标签</td></tr><tr><td align="center"><code>&lt;i&gt;</code></td><td align="center">斜体字标签</td></tr><tr><td align="center"><code>&lt;hr&gt;</code></td><td align="center">水平线标签</td></tr><tr><td align="center"><code>&lt;iframe&gt;</code></td><td align="center">定义内联框架</td></tr><tr><td align="center"><code>&lt;cite&gt;</code></td><td align="center">定义作品标题</td></tr><tr><td align="center"><code>&lt;button&gt;</code></td><td align="center">按钮标签</td></tr><tr><td align="center"><code>&lt;b&gt;</code></td><td align="center">粗体字标签</td></tr><tr><td align="center"><code>&lt;form&gt;</code></td><td align="center">定义供用户输入的表单</td></tr><tr><td align="center"><code>&lt;caption&gt;</code></td><td align="center">定义表标题</td></tr><tr><td align="center"><code>&lt;footer&gt;</code></td><td align="center">定义文档页脚</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;doctype-html的作用&quot;&gt;&lt;a href=&quot;#doctype-html的作用&quot; class=&quot;headerlink&quot; title=&quot;doctype html的作用&quot;&gt;&lt;/a&gt;doctype html的作用&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;它是html5标准网页声明,告诉浏览器用最新的 HTML5标准来解析渲染页面；如果不写，浏览器就会进入混杂模式。而混杂模式指的是浏览器用自己的方式解析代码，页面会以一种兼容的方式来显示。混杂模式一般会模拟老站点的行为以防止老站点无法工作。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端学习" scheme="http://haoyuliugh.github.io/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>一些莫名其妙的东西</title>
    <link href="http://haoyuliugh.github.io/2019/08/31/%E4%B8%80%E4%BA%9B%E8%8E%AB%E5%90%8D%E5%85%B6%E5%A6%99%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
    <id>http://haoyuliugh.github.io/2019/08/31/一些莫名其妙的东西/</id>
    <published>2019-08-31T14:35:25.000Z</published>
    <updated>2020-05-09T10:14:19.837Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><blockquote><p>在室友的怂恿下，莫名其妙的有了搭建blog的想法，就首先感谢下铺的<a href="http://129.204.15.68/" target="_blank" rel="noopener">大哥</a>的支持。由于一些众所周知的原因（没钱）这个小站基于Hexo+GitHub搭建。平时主要用来发表一些文章，一点感悟。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在室友的怂恿下，莫名其妙的有了搭建blog的想法，就首先感谢下铺的&lt;a href=&quot;http://
      
    
    </summary>
    
      <category term="杂项" scheme="http://haoyuliugh.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
  </entry>
  
</feed>
